<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me.dao.ElderDao">
    <select id="findByCondition" resultType="com.me.vo.ElderVo">
        select * from tb_elder
        <where>
            <if test="query != null and query != ''">
                name like concat('%', #{query}, '%')
            </if>
        </where>
        order by elder_id asc
    </select>
    <update id="update" parameterType="com.me.entity.Elder">
        UPDATE tb_elder
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
        </trim>
        WHERE elder_id = #{elderId}
    </update>

    <select id="findWaterUsage" parameterType="map" resultType="java.math.BigDecimal">
        SELECT
            COALESCE(SUM(w.water_usage), 0) AS total_water_usage
        FROM
            tb_water w
                JOIN tb_device d ON w.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND w.record_time &gt;= #{date}
          AND w.record_time &lt; #{date} + INTERVAL '1 day'
    </select>

    <select id="getLatestTemperatureValue" parameterType="map" resultType="java.math.BigDecimal">
        SELECT
            temperature
        FROM
            tb_temp
        WHERE
                device_id IN (
                SELECT device_id FROM tb_device WHERE elder_id = #{elderId}
            )
          AND record_time &gt;= #{date}
          AND record_time &lt; #{date} + INTERVAL '1 day'
        ORDER BY
            record_time DESC
            LIMIT 1
    </select>

    <select id="countHomeTimes" parameterType="map" resultType="java.lang.Integer">
        SELECT
            COUNT(h.home_id) AS home_times
        FROM
            tb_home h
                JOIN tb_device d ON h.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND h.home_time &gt;= #{date}
          AND h.home_time &lt; #{date} + INTERVAL '1 day'
    </select>

    <select id="countOutTimes" parameterType="map" resultType="java.lang.Integer">
        SELECT
            COUNT(h.out_id) AS out_times
        FROM
            tb_out h
                JOIN tb_device d ON h.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND h.out_time &gt;= #{date}
          AND h.out_time &lt; #{date} + INTERVAL '1 day'
    </select>


    <select id="getAverageSmogLevel" parameterType="map" resultType="java.math.BigDecimal">
        SELECT
            AVG(smog_level) AS avg_smog_level
        FROM
            tb_smog
        WHERE
            device_id IN (SELECT device_id FROM tb_device WHERE elder_id = #{elderId})
          AND record_time &gt;= #{date}
          AND record_time &lt; #{date} + INTERVAL '1 day'
    </select>


    <select id="turnOverCount" parameterType="map" resultType="java.lang.Integer">
        SELECT
            SUM(turn_over_count) AS total_turn_over
        FROM
            tb_sleep s
                JOIN tb_device d ON s.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND s.record_date &gt;= #{date}
          AND s.record_date &lt; #{date} + INTERVAL '1 day'
    </select>



    <!-- 查询老年人在指定时间范围内的用水量记录 -->
    <select id="findWaterUsageRange" resultType="com.me.vo.record.WaterUsageRecord">
        SELECT
            DATE_TRUNC('day', w.record_time) AS recordDate,
            SUM(w.water_usage) AS waterUsage
        FROM
            tb_water w
                JOIN tb_device d ON w.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND w.record_time &gt;= #{startDate}
          AND w.record_time &lt; #{endDate}
        GROUP BY
            DATE_TRUNC('day', w.record_time)
        ORDER BY
            recordDate ASC
    </select>

    <!-- 查询老年人在指定时间范围内的体温记录 -->
    <select id="getTemperatureValueRange" resultType="com.me.vo.record.TemperatureRecord">
        SELECT
            t.record_time AS recordTime,
            t.temperature AS temperature
        FROM
            tb_temp t
                JOIN tb_device d ON t.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND t.record_time &gt;= #{startDate}
          AND t.record_time &lt; #{endDate}
        ORDER BY
            recordTime ASC
    </select>

    <!-- 查询老年人在指定时间范围内的回家次数统计 -->
    <select id="countHomeTimesRange" resultType="com.me.vo.record.HomeTimesRecord">
        SELECT
            DATE_TRUNC('day', h.home_time) AS date,
            COUNT(h.home_id) AS homeTimes
        FROM
            tb_home h
            JOIN tb_device d ON h.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND h.home_time &gt;= #{startDate}
          AND h.home_time &lt; #{endDate}
        GROUP BY
            DATE_TRUNC('day', h.home_time)
        ORDER BY
            date ASC
    </select>

    <!-- 查询老年人在指定时间范围内的外出次数统计 -->
    <select id="countOutTimesRange" resultType="com.me.vo.record.OutTimesRecord">
        SELECT
            DATE_TRUNC('day', h.out_time) AS date,
            COUNT(h.out_id) AS outTimes
        FROM
            tb_out h
            JOIN tb_device d ON h.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND h.out_time &gt;= #{startDate}
          AND h.out_time &lt; #{endDate}
        GROUP BY
            DATE_TRUNC('day', h.out_time)
        ORDER BY
            date ASC
    </select>

    <!-- 查询老年人在指定时间范围内的平均雾霾水平 -->
    <select id="getAverageSmogLevelRange" resultType="com.me.vo.record.SmogLevelRecord">
        SELECT
            DATE_TRUNC('day', s.record_time) AS date,
            AVG(s.smog_level) AS averageSmogLevel
        FROM
            tb_smog s
            JOIN tb_device d ON s.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND s.record_time &gt;= #{startDate}
          AND s.record_time &lt; #{endDate}
        GROUP BY
            DATE_TRUNC('day', s.record_time)
        ORDER BY
            date ASC
    </select>

    <!-- 查询老年人在指定时间范围内的翻身次数统计 -->
    <select id="turnOverCountRange" resultType="com.me.vo.record.TurnOverRecord">
        SELECT
            s.record_date AS date,
            SUM(s.turn_over_count) AS turnOverCount
        FROM
            tb_sleep s
            JOIN tb_device d ON s.device_id = d.device_id
        WHERE
            d.elder_id = #{elderId}
          AND s.record_date &gt;= #{startDate}
          AND s.record_date &lt; #{endDate}
        GROUP BY
            s.record_date
        ORDER BY
            date ASC
    </select>
</mapper>